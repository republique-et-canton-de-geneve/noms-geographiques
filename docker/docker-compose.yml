version: "3.7"

services:
  mariadb:
    image: "wodby/mariadb:${MARIADB_TAG}"
    container_name: "${PROJECT_NAME}_mariadb"
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    ports:
      - 8806:3306
    volumes:
      - ./mariadb/init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
      - ./mariadb/data:/var/lib/mysql # Use bind mount

  php:
    image: "wodby/drupal-php:${PHP_TAG}"
    container_name: "${PROJECT_NAME}_php"
    environment:
      SSMTP_MAILHUB: mailhog:1025
      PHP_SENDMAIL_PATH: '"/usr/bin/dos2unix -u | /usr/sbin/ssmtp -t -f"'
      DB_HOST: "${DB_HOST}"
      DB_PORT: "${DB_PORT}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
      DB_NAME: "${DB_NAME}"
      DB_DRIVER: "${DB_DRIVER}"
      PHP_FPM_USER: wodby
      PHP_FPM_GROUP: wodby
      SIMPLESAMLPHP_CONFIG_DIR: '${SIMPLESAMLPHP_CONFIG_DIR}'
#      COLUMNS: 80 # Set 80 columns for docker exec -it.
#     # Read instructions at https://wodby.com/docs/stacks/php/local/#xdebug
#      PHP_XDEBUG: 1
#      PHP_XDEBUG_MODE: debug
#      PHP_IDE_CONFIG: serverName=my-ide
#      PHP_XDEBUG_IDEKEY: "my-ide"
#      PHP_XDEBUG_CLIENT_HOST: 172.17.0.1 # Linux
#      PHP_XDEBUG_CLIENT_HOST: host.docker.internal # Docker 18.03+ Mac/Win
#      PHP_XDEBUG_CLIENT_HOST: 10.0.75.1 # Windows, Docker < 18.03
#      PHP_XDEBUG_LOG: /tmp/php-xdebug.log
#     # PHPUnit Drupal testing configurations
#      SIMPLETEST_BASE_URL: "http://nginx"
#      SIMPLETEST_DB: "${DB_DRIVER}://${DB_USER}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}#tests_"
#      MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","goog:chromeOptions":{"args":["--disable-gpu","--headless"]}}, "http://chrome:9515"]'
    volumes:
      - ../:/var/www/html:cached

  crond:
    image: "wodby/drupal-php:${PHP_TAG}"
    container_name: "${PROJECT_NAME}_crond"
    environment:
      CRONTAB: "0 * * * * drush -r /var/www/html/htdocs cron"
    command: sudo -E LD_PRELOAD=/usr/lib/preloadable_libiconv.so crond -f -d 0
    volumes:
      - ../:/var/www/html:cached

  mailhog:
    image: "mailhog/mailhog"
    container_name: "${PROJECT_NAME}_mailhog"
    labels:
      - "traefik.http.services.${PROJECT_NAME}_mailhog.loadbalancer.server.port=8025"
      - "traefik.http.routers.${PROJECT_NAME}_mailhog.rule=Host(`mailhog.${PROJECT_BASE_URL}`)"

  apache:
    image: "wodby/apache:${APACHE_TAG}"
    container_name: "${PROJECT_NAME}_apache"
    depends_on:
      - php
    environment:
      APACHE_LOG_LEVEL: debug
      APACHE_BACKEND_HOST: php
      APACHE_VHOST_PRESET: php
      APACHE_DOCUMENT_ROOT: /var/www/html/htdocs
    volumes:
      - ../:/var/www/html:cached

    labels:
      - "traefik.http.routers.${PROJECT_NAME}_apache.rule=Host(`${PROJECT_BASE_URL}`,`${PROJECT_BO_URL}`)"

  pma:
    image: phpmyadmin/phpmyadmin
    container_name: "${PROJECT_NAME}_pma"
    environment:
      PMA_HOST: "${DB_HOST}"
      PMA_USER: root
      PMA_PASSWORD: "${DB_ROOT_PASSWORD}"
      UPLOAD_LIMIT: 1G
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_pma.rule=Host(`pma.${PROJECT_BASE_URL}`)"

  memcached:
    container_name: "${PROJECT_NAME}_memcached"
    image: "wodby/memcached:${MEMCACHED_TAG}"

  traefik:
    image: "traefik:v2.0"
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker
    ports:
      - "${PROJECT_PORT}:80"
    #    - '8080:8080' # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  idp:
    image: "kenchan0130/simplesamlphp"
    container_name: "${PROJECT_NAME}_idp"
    ports:
      - "8080:8080"
    environment:
      SIMPLESAMLPHP_SP_ENTITY_ID: "${PROJECT_NAME}_local_drupal"
      SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE: "http://${PROJECT_BO_URL}:8099/saml/module.php/saml/sp/saml2-acs.php/ngeo-sp"
    volumes:
      - ./comptes_locaux_saml.php:/var/www/simplesamlphp/config/authsources.php

  node:
    image: "wodby/node:${NODE_TAG}"
    user: root
    container_name: "${PROJECT_NAME}_node"
    working_dir: /var/www/html/htdocs/themes/custom/gech_app/src
    labels:
      - 'traefik.backend=${PROJECT_NAME}_node'
      - 'traefik.port=3000'
      - 'traefik.frontend.rule=Host:front.${PROJECT_BASE_URL}'
    expose:
      - "3000"
    tty: true
    volumes:
      - ../:/var/www/html
