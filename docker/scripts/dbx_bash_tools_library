#!/bin/bash
#    .--.
#   |o_o |
#   |:_/ |
#  //   \ \
# (|     | )
#/'\_   _/`\
#\___)=(___/
#+-------------------------------------------+
#| Library tools for bash scripts used in    |
#| the project for the project.              |
#| @author DBX <didier.beux@etat.ge.ch>      |
#| @since jeu. 16 déc. 2021 10:06:04         |
#+-------------------------------------------+
project_name=$1

#+------------------------------+
#| Ajoute les espaces manquants |
#| dans la case d'affichage du  |
#| message selon la longueur du |
#| texte passé en paramètre.    |
#| parameters :                 |
#|   text: text to print        |
#|   spaces: spaces total to    |
#|           be replaced by the |
#|           text.              |
#+------------------------------+
function addSpacesAfterText(){
	text=$1
	spaces=$2
	length=${#text}
	nbrOfSpaces=$((${spaces} - $length))
	cpt=0
	spaces='';
	while [[ ${cpt} < ${nbrOfSpaces} ]]; do
		spaces=${spaces}' ';
		(( cpt++ ))
	done
	echo -en "${text}${spaces}"
}

if [[ "${project_name}" == "" ]]; then
  echo "+-----------------------------------------+"
  echo "| ERROR!                                  |"
  echo "+-----------------------------------------+"
  echo "| Library called without the project_name |"
  echo "+-----------------------------------------+"
  exit 1
fi

function printHelp(){
  dir="$1"
  echo "+------------------------------------------------------+"
  echo "| HELP!                                                |"
  echo "+------------------------------------------------------+"
  echo "| La commande n'est pas disponible ici!                |"
  echo "| Veuillez-vous positionner dans le répertoire ${dir}  |"
  echo "+------------------------------------------------------+"
}

function connectTo(){
   cmd="$1"
   param="$2"

   if [[ -f scripts/${cmd} ]]; then
      if [[ "${param}" == "" ]]; then
      . scripts/${cmd};
      else
      . scripts/${cmd} ${param};
      fi
   else
      printHelp docker
   fi
}

function connect(){
   value=$1
   case $value in
     php)
        docker exec -it ${project_name}_php /bin/sh
        ;;
     mysql)
        docker exec -it ${project_name}_mariadb /bin/sh
        ;;
     apache)
        docker exec -it ${project_name}_apache /bin/sh
        ;;
     node)
        docker exec -it ${project_name}_node /bin/sh
        ;;
     *)
        echo "+----------------------------------------------------+"
        echo "| AIDE!                                              |"
        echo "+----------------------------------------------------+"
        echo "| Vous devez taper : connect [php | mysql | apache]  |"
        echo "+----------------------------------------------------+"
   esac
}

#+---------------------------------------------------------+
#| Fonction pour activer ou désactiver Xdebug dans Docker. |
#+---------------------------------------------------------+
function xdebug() {
   activated=$1
   file_name='./docker-compose.yml'
   if [ ! -f $filename ]; then
     echo "File $file_name n'existe pas!"
     exit 0
   fi
   if [ "${activated}" == true ]; then
      echo "Activation du Xdebug ..."
      sed -i 's/^#      PHP_XDEBUG:/      PHP_XDEBUG:/g' ${file_name}
      sed -i 's/^#      PHP_XDEBUG_MODE:/      PHP_XDEBUG_MODE:/g' ${file_name}
      sed -i 's/^#      PHP_XDEBUG_IDEKEY:/      PHP_XDEBUG_IDEKEY:/g' ${file_name}
      sed -i 's/^#      PHP_IDE_CONFIG:/      PHP_IDE_CONFIG:/g' ${file_name}
      sed -i 's/^#      PHP_XDEBUG_CLIENT_HOST: host.docker.internal/      PHP_XDEBUG_CLIENT_HOST: host.docker.internal/g' ${file_name}
      sed -i 's/^#      PHP_IDE_CONFIG:/      PHP_IDE_CONFIG:/g' ${file_name}
      echo "Xdebug activé!"
   elif [ "${activated}" == false ]; then
      echo "Désactivation de Xdebug ..."
      sed -i 's/^      PHP_XDEBUG:/#      PHP_XDEBUG:/g' ${file_name}
      sed -i 's/^      PHP_XDEBUG_MODE:/#      PHP_XDEBUG_MODE:/g' ${file_name}
      sed -i 's/^      PHP_XDEBUG_IDEKEY:/#      PHP_XDEBUG_IDEKEY:/g' ${file_name}
      sed -i 's/^      PHP_IDE_CONFIG:/#      PHP_IDE_CONFIG:/g' ${file_name}
      sed -i 's/^      PHP_XDEBUG_CLIENT_HOST: host.docker.internal/#      PHP_XDEBUG_CLIENT_HOST: host.docker.internal/g' ${file_name}
      sed -i 's/^      PHP_IDE_CONFIG:/#      PHP_IDE_CONFIG:/g' ${file_name}
      echo "Xdebug désactivé!"
   fi
}

# +--------------------------------------------------------------------+
# | Suppression des vendors, du core et des modules et themes contribs |
# +--------------------------------------------------------------------+
function cleanDrupal(){
  base_path="$1"
  if [ -d ${base_path}/vendor ]; then
    rm -rf "${base_path}/vendor"
  fi
  if [ -d ${base_path}/htdocs/core ]; then
    rm -rf "${base_path}/htdocs/core"
  fi
  if [ -d ${base_path}/htdocs/modules/contrib ]; then
    rm -rf "${base_path}/htdocs/modules/contrib"
  fi
  if [ -d ${base_path}/htdocs/themes/contrib ]; then
    rm -rf "${base_path}/htdocs/themes/contrib"
  fi
}
